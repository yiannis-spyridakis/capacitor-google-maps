{"version":3,"file":"map.js","sourceRoot":"","sources":["../../src/map.ts"],"names":[],"mappings":"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","sourcesContent":["import { Capacitor } from '@capacitor/core';\nimport type { PluginListenerHandle } from '@capacitor/core';\n\nimport type {\n  CameraConfig,\n  Marker,\n  MapPadding,\n  MapListenerCallback,\n  MapReadyCallbackData,\n  CameraIdleCallbackData,\n  CameraMoveStartedCallbackData,\n  ClusterClickCallbackData,\n  MapClickCallbackData,\n  MarkerClickCallbackData,\n  MyLocationButtonClickCallbackData,\n  Polygon,\n  PolygonClickCallbackData,\n  Circle,\n  CircleClickCallbackData,\n  Polyline,\n  PolylineCallbackData,\n} from './definitions';\nimport { LatLngBounds, MapType } from './definitions';\nimport type { CreateMapArgs } from './implementation';\nimport { CapacitorGoogleMaps } from './implementation';\n\nexport interface GoogleMapInterface {\n  create(options: CreateMapArgs, callback?: MapListenerCallback<MapReadyCallbackData>): Promise<GoogleMap>;\n  enableTouch(): Promise<void>;\n  disableTouch(): Promise<void>;\n  enableClustering(\n    /**\n     * The minimum number of markers that can be clustered together. The default is 4 markers.\n     */\n    minClusterSize?: number\n  ): Promise<void>;\n  disableClustering(): Promise<void>;\n  addMarker(marker: Marker): Promise<string>;\n  addMarkers(markers: Marker[]): Promise<string[]>;\n  removeMarker(id: string): Promise<void>;\n  removeMarkers(ids: string[]): Promise<void>;\n  addPolygons(polygons: Polygon[]): Promise<string[]>;\n  removePolygons(ids: string[]): Promise<void>;\n  addCircles(circles: Circle[]): Promise<string[]>;\n  removeCircles(ids: string[]): Promise<void>;\n  addPolylines(polylines: Polyline[]): Promise<string[]>;\n  removePolylines(ids: string[]): Promise<void>;\n  destroy(): Promise<void>;\n  setCamera(config: CameraConfig): Promise<void>;\n  /**\n   * Get current map type\n   */\n  getMapType(): Promise<MapType>;\n  setMapType(mapType: MapType): Promise<void>;\n  enableIndoorMaps(enabled: boolean): Promise<void>;\n  enableTrafficLayer(enabled: boolean): Promise<void>;\n  enableAccessibilityElements(enabled: boolean): Promise<void>;\n  enableCurrentLocation(enabled: boolean): Promise<void>;\n  setPadding(padding: MapPadding): Promise<void>;\n  /**\n   * Get the map's current viewport latitude and longitude bounds.\n   *\n   * @returns {LatLngBounds}\n   */\n  getMapBounds(): Promise<LatLngBounds>;\n  /**\n   * Sets the map viewport to contain the given bounds.\n   * @param bounds The bounds to fit in the viewport.\n   * @param padding Optional padding to apply in pixels. The bounds will be fit in the part of the map that remains after padding is removed.\n   */\n  fitBounds(bounds: LatLngBounds, padding?: number): Promise<void>;\n  setOnBoundsChangedListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void>;\n  setOnCameraIdleListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void>;\n  setOnCameraMoveStartedListener(callback?: MapListenerCallback<CameraMoveStartedCallbackData>): Promise<void>;\n  setOnClusterClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void>;\n  setOnClusterInfoWindowClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void>;\n  setOnInfoWindowClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n  setOnMapClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\n  setOnMarkerClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n  setOnPolygonClickListener(callback?: MapListenerCallback<PolygonClickCallbackData>): Promise<void>;\n  setOnCircleClickListener(callback?: MapListenerCallback<CircleClickCallbackData>): Promise<void>;\n  setOnPolylineClickListener(callback?: MapListenerCallback<PolylineCallbackData>): Promise<void>;\n  setOnMarkerDragStartListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n  setOnMarkerDragListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n  setOnMarkerDragEndListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void>;\n  setOnMyLocationButtonClickListener(callback?: MapListenerCallback<MyLocationButtonClickCallbackData>): Promise<void>;\n  setOnMyLocationClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void>;\n}\n\nclass MapCustomElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    this.innerHTML = '';\n\n    if (Capacitor.getPlatform() == 'ios') {\n      this.style.overflow = 'scroll';\n      (this.style as any)['-webkit-overflow-scrolling'] = 'touch';\n\n      const overflowDiv = document.createElement('div');\n      overflowDiv.style.height = '200%';\n\n      this.appendChild(overflowDiv);\n    }\n  }\n}\n\ncustomElements.define('capacitor-google-map', MapCustomElement);\n\nexport class GoogleMap {\n  private id: string;\n  private element: HTMLElement | null = null;\n  private resizeObserver: ResizeObserver | null = null;\n\n  private onBoundsChangedListener?: PluginListenerHandle;\n  private onCameraIdleListener?: PluginListenerHandle;\n  private onCameraMoveStartedListener?: PluginListenerHandle;\n  private onClusterClickListener?: PluginListenerHandle;\n  private onClusterInfoWindowClickListener?: PluginListenerHandle;\n  private onInfoWindowClickListener?: PluginListenerHandle;\n  private onMapClickListener?: PluginListenerHandle;\n  private onPolylineClickListener?: PluginListenerHandle;\n  private onMarkerClickListener?: PluginListenerHandle;\n  private onPolygonClickListener?: PluginListenerHandle;\n  private onCircleClickListener?: PluginListenerHandle;\n  private onMarkerDragStartListener?: PluginListenerHandle;\n  private onMarkerDragListener?: PluginListenerHandle;\n  private onMarkerDragEndListener?: PluginListenerHandle;\n  private onMyLocationButtonClickListener?: PluginListenerHandle;\n  private onMyLocationClickListener?: PluginListenerHandle;\n\n  private constructor(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * Creates a new instance of a Google Map\n   * @param options\n   * @param callback\n   * @returns GoogleMap\n   */\n  public static async create(\n    options: CreateMapArgs,\n    callback?: MapListenerCallback<MapReadyCallbackData>\n  ): Promise<GoogleMap> {\n    const newMap = new GoogleMap(options.id);\n\n    if (!options.element) {\n      throw new Error('container element is required');\n    }\n\n    if (options.config.androidLiteMode === undefined) {\n      options.config.androidLiteMode = false;\n    }\n\n    newMap.element = options.element;\n    newMap.element.dataset.internalId = options.id;\n\n    const elementBounds = await GoogleMap.getElementBounds(options.element);\n    options.config.width = elementBounds.width;\n    options.config.height = elementBounds.height;\n    options.config.x = elementBounds.x;\n    options.config.y = elementBounds.y;\n    options.config.devicePixelRatio = window.devicePixelRatio;\n\n    if (Capacitor.getPlatform() == 'android') {\n      newMap.initScrolling();\n    }\n\n    if (Capacitor.isNativePlatform()) {\n      (options.element as any) = {};\n\n      const getMapBounds = () => {\n        const mapRect = newMap.element?.getBoundingClientRect() ?? ({} as DOMRect);\n        return {\n          x: mapRect.x,\n          y: mapRect.y,\n          width: mapRect.width,\n          height: mapRect.height,\n        };\n      };\n\n      const onDisplay = () => {\n        CapacitorGoogleMaps.onDisplay({\n          id: newMap.id,\n          mapBounds: getMapBounds(),\n        });\n      };\n\n      const onResize = () => {\n        CapacitorGoogleMaps.onResize({\n          id: newMap.id,\n          mapBounds: getMapBounds(),\n        });\n      };\n\n      const ionicPage = newMap.element.closest('.ion-page');\n      if (Capacitor.getPlatform() === 'ios' && ionicPage) {\n        ionicPage.addEventListener('ionViewWillEnter', () => {\n          setTimeout(() => {\n            onDisplay();\n          }, 100);\n        });\n        ionicPage.addEventListener('ionViewDidEnter', () => {\n          setTimeout(() => {\n            onDisplay();\n          }, 100);\n        });\n      }\n\n      const lastState = {\n        width: elementBounds.width,\n        height: elementBounds.height,\n        isHidden: false,\n      };\n      newMap.resizeObserver = new ResizeObserver(() => {\n        if (newMap.element != null) {\n          const mapRect = newMap.element.getBoundingClientRect();\n\n          const isHidden = mapRect.width === 0 && mapRect.height === 0;\n          if (!isHidden) {\n            if (lastState.isHidden) {\n              if (Capacitor.getPlatform() === 'ios' && !ionicPage) {\n                onDisplay();\n              }\n            } else if (lastState.width !== mapRect.width || lastState.height !== mapRect.height) {\n              onResize();\n            }\n          }\n\n          lastState.width = mapRect.width;\n          lastState.height = mapRect.height;\n          lastState.isHidden = isHidden;\n        }\n      });\n      newMap.resizeObserver.observe(newMap.element);\n    }\n\n    // small delay to allow for iOS WKWebView to setup corresponding element sub-scroll views ???\n    await new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await CapacitorGoogleMaps.create(options);\n          resolve(undefined);\n        } catch (err) {\n          reject(err);\n        }\n      }, 200);\n    });\n\n    if (callback) {\n      const onMapReadyListener = await CapacitorGoogleMaps.addListener('onMapReady', (data: MapReadyCallbackData) => {\n        if (data.mapId == newMap.id) {\n          callback(data);\n          onMapReadyListener.remove();\n        }\n      });\n    }\n\n    return newMap;\n  }\n\n  private static async getElementBounds(element: HTMLElement): Promise<DOMRect> {\n    return new Promise((resolve) => {\n      let elementBounds = element.getBoundingClientRect();\n      if (elementBounds.width == 0) {\n        let retries = 0;\n        const boundsInterval = setInterval(function () {\n          if (elementBounds.width == 0 && retries < 30) {\n            elementBounds = element.getBoundingClientRect();\n            retries++;\n          } else {\n            if (retries == 30) {\n              console.warn('Map size could not be determined');\n            }\n            clearInterval(boundsInterval);\n            resolve(elementBounds);\n          }\n        }, 100);\n      } else {\n        resolve(elementBounds);\n      }\n    });\n  }\n\n  /**\n   * Enable touch events on native map\n   *\n   * @returns void\n   */\n  async enableTouch(): Promise<void> {\n    return CapacitorGoogleMaps.enableTouch({\n      id: this.id,\n    });\n  }\n\n  /**\n   * Disable touch events on native map\n   *\n   * @returns void\n   */\n  async disableTouch(): Promise<void> {\n    return CapacitorGoogleMaps.disableTouch({\n      id: this.id,\n    });\n  }\n\n  /**\n   * Enable marker clustering\n   *\n   * @param minClusterSize - The minimum number of markers that can be clustered together.\n   * @defaultValue 4\n   *\n   * @returns void\n   */\n  async enableClustering(minClusterSize?: number): Promise<void> {\n    return CapacitorGoogleMaps.enableClustering({\n      id: this.id,\n      minClusterSize,\n    });\n  }\n\n  /**\n   * Disable marker clustering\n   *\n   * @returns void\n   */\n  async disableClustering(): Promise<void> {\n    return CapacitorGoogleMaps.disableClustering({\n      id: this.id,\n    });\n  }\n\n  /**\n   * Adds a marker to the map\n   *\n   * @param marker\n   * @returns created marker id\n   */\n  async addMarker(marker: Marker): Promise<string> {\n    const res = await CapacitorGoogleMaps.addMarker({\n      id: this.id,\n      marker,\n    });\n\n    return res.id;\n  }\n\n  /**\n   * Adds multiple markers to the map\n   *\n   * @param markers\n   * @returns array of created marker IDs\n   */\n  async addMarkers(markers: Marker[]): Promise<string[]> {\n    const res = await CapacitorGoogleMaps.addMarkers({\n      id: this.id,\n      markers,\n    });\n\n    return res.ids;\n  }\n\n  /**\n   * Remove marker from the map\n   *\n   * @param id id of the marker to remove from the map\n   * @returns\n   */\n  async removeMarker(id: string): Promise<void> {\n    return CapacitorGoogleMaps.removeMarker({\n      id: this.id,\n      markerId: id,\n    });\n  }\n\n  /**\n   * Remove markers from the map\n   *\n   * @param ids array of ids to remove from the map\n   * @returns\n   */\n  async removeMarkers(ids: string[]): Promise<void> {\n    return CapacitorGoogleMaps.removeMarkers({\n      id: this.id,\n      markerIds: ids,\n    });\n  }\n\n  async addPolygons(polygons: Polygon[]): Promise<string[]> {\n    const res = await CapacitorGoogleMaps.addPolygons({\n      id: this.id,\n      polygons,\n    });\n\n    return res.ids;\n  }\n\n  async addPolylines(polylines: Polyline[]): Promise<string[]> {\n    const res = await CapacitorGoogleMaps.addPolylines({\n      id: this.id,\n      polylines,\n    });\n\n    return res.ids;\n  }\n\n  async removePolygons(ids: string[]): Promise<void> {\n    return CapacitorGoogleMaps.removePolygons({\n      id: this.id,\n      polygonIds: ids,\n    });\n  }\n\n  async addCircles(circles: Circle[]): Promise<string[]> {\n    const res = await CapacitorGoogleMaps.addCircles({\n      id: this.id,\n      circles,\n    });\n\n    return res.ids;\n  }\n\n  async removeCircles(ids: string[]): Promise<void> {\n    return CapacitorGoogleMaps.removeCircles({\n      id: this.id,\n      circleIds: ids,\n    });\n  }\n\n  async removePolylines(ids: string[]): Promise<void> {\n    return CapacitorGoogleMaps.removePolylines({\n      id: this.id,\n      polylineIds: ids,\n    });\n  }\n\n  /**\n   * Destroy the current instance of the map\n   */\n  async destroy(): Promise<void> {\n    if (Capacitor.getPlatform() == 'android') {\n      this.disableScrolling();\n    }\n\n    if (Capacitor.isNativePlatform()) {\n      this.resizeObserver?.disconnect();\n    }\n\n    this.removeAllMapListeners();\n\n    return CapacitorGoogleMaps.destroy({\n      id: this.id,\n    });\n  }\n\n  /**\n   * Update the map camera configuration\n   *\n   * @param config\n   * @returns\n   */\n  async setCamera(config: CameraConfig): Promise<void> {\n    return CapacitorGoogleMaps.setCamera({\n      id: this.id,\n      config,\n    });\n  }\n\n  async getMapType(): Promise<MapType> {\n    const { type } = await CapacitorGoogleMaps.getMapType({ id: this.id });\n    return MapType[type as keyof typeof MapType];\n  }\n\n  /**\n   * Sets the type of map tiles that should be displayed.\n   *\n   * @param mapType\n   * @returns\n   */\n  async setMapType(mapType: MapType): Promise<void> {\n    return CapacitorGoogleMaps.setMapType({\n      id: this.id,\n      mapType,\n    });\n  }\n\n  /**\n   * Sets whether indoor maps are shown, where available.\n   *\n   * @param enabled\n   * @returns\n   */\n  async enableIndoorMaps(enabled: boolean): Promise<void> {\n    return CapacitorGoogleMaps.enableIndoorMaps({\n      id: this.id,\n      enabled,\n    });\n  }\n\n  /**\n   * Controls whether the map is drawing traffic data, if available.\n   *\n   * @param enabled\n   * @returns\n   */\n  async enableTrafficLayer(enabled: boolean): Promise<void> {\n    return CapacitorGoogleMaps.enableTrafficLayer({\n      id: this.id,\n      enabled,\n    });\n  }\n\n  /**\n   * Show accessibility elements for overlay objects, such as Marker and Polyline.\n   *\n   * Only available on iOS.\n   *\n   * @param enabled\n   * @returns\n   */\n  async enableAccessibilityElements(enabled: boolean): Promise<void> {\n    return CapacitorGoogleMaps.enableAccessibilityElements({\n      id: this.id,\n      enabled,\n    });\n  }\n\n  /**\n   * Set whether the My Location dot and accuracy circle is enabled.\n   *\n   * @param enabled\n   * @returns\n   */\n  async enableCurrentLocation(enabled: boolean): Promise<void> {\n    return CapacitorGoogleMaps.enableCurrentLocation({\n      id: this.id,\n      enabled,\n    });\n  }\n\n  /**\n   * Set padding on the 'visible' region of the view.\n   *\n   * @param padding\n   * @returns\n   */\n  async setPadding(padding: MapPadding): Promise<void> {\n    return CapacitorGoogleMaps.setPadding({\n      id: this.id,\n      padding,\n    });\n  }\n\n  /**\n   * Get the map's current viewport latitude and longitude bounds.\n   *\n   * @returns {LatLngBounds}\n   */\n  async getMapBounds(): Promise<LatLngBounds> {\n    return new LatLngBounds(\n      await CapacitorGoogleMaps.getMapBounds({\n        id: this.id,\n      })\n    );\n  }\n\n  async fitBounds(bounds: LatLngBounds, padding?: number): Promise<void> {\n    return CapacitorGoogleMaps.fitBounds({\n      id: this.id,\n      bounds,\n      padding,\n    });\n  }\n\n  initScrolling(): void {\n    const ionContents = document.getElementsByTagName('ion-content');\n\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < ionContents.length; i++) {\n      (ionContents[i] as any).scrollEvents = true;\n    }\n\n    window.addEventListener('ionScroll', this.handleScrollEvent);\n    window.addEventListener('scroll', this.handleScrollEvent);\n    window.addEventListener('resize', this.handleScrollEvent);\n    if (screen.orientation) {\n      screen.orientation.addEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    } else {\n      window.addEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    }\n  }\n\n  disableScrolling(): void {\n    window.removeEventListener('ionScroll', this.handleScrollEvent);\n    window.removeEventListener('scroll', this.handleScrollEvent);\n    window.removeEventListener('resize', this.handleScrollEvent);\n    if (screen.orientation) {\n      screen.orientation.removeEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    } else {\n      window.removeEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    }\n  }\n\n  handleScrollEvent = (): void => this.updateMapBounds();\n\n  private updateMapBounds(): void {\n    if (this.element) {\n      const mapRect = this.element.getBoundingClientRect();\n\n      CapacitorGoogleMaps.onScroll({\n        id: this.id,\n        mapBounds: {\n          x: mapRect.x,\n          y: mapRect.y,\n          width: mapRect.width,\n          height: mapRect.height,\n        },\n      });\n    }\n  }\n\n  /*\n  private findContainerElement(): HTMLElement | null {\n    if (!this.element) {\n      return null;\n    }\n\n    let parentElement = this.element.parentElement;\n    while (parentElement !== null) {\n      if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n        return parentElement;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    return null;\n  }\n  */\n\n  /**\n   * Set the event listener on the map for 'onCameraIdle' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnCameraIdleListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void> {\n    if (this.onCameraIdleListener) {\n      this.onCameraIdleListener.remove();\n    }\n\n    if (callback) {\n      this.onCameraIdleListener = await CapacitorGoogleMaps.addListener(\n        'onCameraIdle',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onCameraIdleListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onBoundsChanged' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnBoundsChangedListener(callback?: MapListenerCallback<CameraIdleCallbackData>): Promise<void> {\n    if (this.onBoundsChangedListener) {\n      this.onBoundsChangedListener.remove();\n    }\n\n    if (callback) {\n      this.onBoundsChangedListener = await CapacitorGoogleMaps.addListener(\n        'onBoundsChanged',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onBoundsChangedListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onCameraMoveStarted' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnCameraMoveStartedListener(callback?: MapListenerCallback<CameraMoveStartedCallbackData>): Promise<void> {\n    if (this.onCameraMoveStartedListener) {\n      this.onCameraMoveStartedListener.remove();\n    }\n\n    if (callback) {\n      this.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener(\n        'onCameraMoveStarted',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onCameraMoveStartedListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onClusterClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnClusterClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void> {\n    if (this.onClusterClickListener) {\n      this.onClusterClickListener.remove();\n    }\n\n    if (callback) {\n      this.onClusterClickListener = await CapacitorGoogleMaps.addListener(\n        'onClusterClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onClusterClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnClusterInfoWindowClickListener(callback?: MapListenerCallback<ClusterClickCallbackData>): Promise<void> {\n    if (this.onClusterInfoWindowClickListener) {\n      this.onClusterInfoWindowClickListener.remove();\n    }\n\n    if (callback) {\n      this.onClusterInfoWindowClickListener = await CapacitorGoogleMaps.addListener(\n        'onClusterInfoWindowClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onClusterInfoWindowClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnInfoWindowClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\n    if (this.onInfoWindowClickListener) {\n      this.onInfoWindowClickListener.remove();\n    }\n\n    if (callback) {\n      this.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener(\n        'onInfoWindowClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onInfoWindowClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMapClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMapClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\n    if (this.onMapClickListener) {\n      this.onMapClickListener.remove();\n    }\n\n    if (callback) {\n      this.onMapClickListener = await CapacitorGoogleMaps.addListener('onMapClick', this.generateCallback(callback));\n    } else {\n      this.onMapClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onPolygonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnPolygonClickListener(callback?: MapListenerCallback<PolygonClickCallbackData>): Promise<void> {\n    if (this.onPolygonClickListener) {\n      this.onPolygonClickListener.remove();\n    }\n\n    if (callback) {\n      this.onPolygonClickListener = await CapacitorGoogleMaps.addListener(\n        'onPolygonClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onPolygonClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onCircleClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnCircleClickListener(callback?: MapListenerCallback<CircleClickCallbackData>): Promise<void> {\n    if (this.onCircleClickListener) [this.onCircleClickListener.remove()];\n\n    if (callback) {\n      this.onCircleClickListener = await CapacitorGoogleMaps.addListener(\n        'onCircleClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onCircleClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMarkerClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMarkerClickListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\n    if (this.onMarkerClickListener) {\n      this.onMarkerClickListener.remove();\n    }\n\n    if (callback) {\n      this.onMarkerClickListener = await CapacitorGoogleMaps.addListener(\n        'onMarkerClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onMarkerClickListener = undefined;\n    }\n  }\n  /**\n   * Set the event listener on the map for 'onPolylineClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnPolylineClickListener(callback?: MapListenerCallback<PolylineCallbackData>): Promise<void> {\n    if (this.onPolylineClickListener) {\n      this.onPolylineClickListener.remove();\n    }\n\n    if (callback) {\n      this.onPolylineClickListener = await CapacitorGoogleMaps.addListener(\n        'onPolylineClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onPolylineClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMarkerDragStart' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMarkerDragStartListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\n    if (this.onMarkerDragStartListener) {\n      this.onMarkerDragStartListener.remove();\n    }\n\n    if (callback) {\n      this.onMarkerDragStartListener = await CapacitorGoogleMaps.addListener(\n        'onMarkerDragStart',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onMarkerDragStartListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMarkerDrag' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMarkerDragListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\n    if (this.onMarkerDragListener) {\n      this.onMarkerDragListener.remove();\n    }\n\n    if (callback) {\n      this.onMarkerDragListener = await CapacitorGoogleMaps.addListener(\n        'onMarkerDrag',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onMarkerDragListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMarkerDragEnd' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMarkerDragEndListener(callback?: MapListenerCallback<MarkerClickCallbackData>): Promise<void> {\n    if (this.onMarkerDragEndListener) {\n      this.onMarkerDragEndListener.remove();\n    }\n\n    if (callback) {\n      this.onMarkerDragEndListener = await CapacitorGoogleMaps.addListener(\n        'onMarkerDragEnd',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onMarkerDragEndListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMyLocationButtonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMyLocationButtonClickListener(\n    callback?: MapListenerCallback<MyLocationButtonClickCallbackData>\n  ): Promise<void> {\n    if (this.onMyLocationButtonClickListener) {\n      this.onMyLocationButtonClickListener.remove();\n    }\n\n    if (callback) {\n      this.onMyLocationButtonClickListener = await CapacitorGoogleMaps.addListener(\n        'onMyLocationButtonClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onMyLocationButtonClickListener = undefined;\n    }\n  }\n\n  /**\n   * Set the event listener on the map for 'onMyLocationClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  async setOnMyLocationClickListener(callback?: MapListenerCallback<MapClickCallbackData>): Promise<void> {\n    if (this.onMyLocationClickListener) {\n      this.onMyLocationClickListener.remove();\n    }\n\n    if (callback) {\n      this.onMyLocationClickListener = await CapacitorGoogleMaps.addListener(\n        'onMyLocationClick',\n        this.generateCallback(callback)\n      );\n    } else {\n      this.onMyLocationClickListener = undefined;\n    }\n  }\n\n  /**\n   * Remove all event listeners on the map.\n   *\n   * @param callback\n   * @returns\n   */\n  async removeAllMapListeners(): Promise<void> {\n    if (this.onBoundsChangedListener) {\n      this.onBoundsChangedListener.remove();\n      this.onBoundsChangedListener = undefined;\n    }\n    if (this.onCameraIdleListener) {\n      this.onCameraIdleListener.remove();\n      this.onCameraIdleListener = undefined;\n    }\n    if (this.onCameraMoveStartedListener) {\n      this.onCameraMoveStartedListener.remove();\n      this.onCameraMoveStartedListener = undefined;\n    }\n\n    if (this.onClusterClickListener) {\n      this.onClusterClickListener.remove();\n      this.onClusterClickListener = undefined;\n    }\n\n    if (this.onClusterInfoWindowClickListener) {\n      this.onClusterInfoWindowClickListener.remove();\n      this.onClusterInfoWindowClickListener = undefined;\n    }\n\n    if (this.onInfoWindowClickListener) {\n      this.onInfoWindowClickListener.remove();\n      this.onInfoWindowClickListener = undefined;\n    }\n\n    if (this.onMapClickListener) {\n      this.onMapClickListener.remove();\n      this.onMapClickListener = undefined;\n    }\n\n    if (this.onPolylineClickListener) {\n      this.onPolylineClickListener.remove();\n      this.onPolylineClickListener = undefined;\n    }\n\n    if (this.onMarkerClickListener) {\n      this.onMarkerClickListener.remove();\n      this.onMarkerClickListener = undefined;\n    }\n\n    if (this.onPolygonClickListener) {\n      this.onPolygonClickListener.remove();\n      this.onPolygonClickListener = undefined;\n    }\n\n    if (this.onCircleClickListener) {\n      this.onCircleClickListener.remove();\n      this.onCircleClickListener = undefined;\n    }\n\n    if (this.onMarkerDragStartListener) {\n      this.onMarkerDragStartListener.remove();\n      this.onMarkerDragStartListener = undefined;\n    }\n\n    if (this.onMarkerDragListener) {\n      this.onMarkerDragListener.remove();\n      this.onMarkerDragListener = undefined;\n    }\n\n    if (this.onMarkerDragEndListener) {\n      this.onMarkerDragEndListener.remove();\n      this.onMarkerDragEndListener = undefined;\n    }\n\n    if (this.onMyLocationButtonClickListener) {\n      this.onMyLocationButtonClickListener.remove();\n      this.onMyLocationButtonClickListener = undefined;\n    }\n\n    if (this.onMyLocationClickListener) {\n      this.onMyLocationClickListener.remove();\n      this.onMyLocationClickListener = undefined;\n    }\n  }\n\n  private generateCallback(callback: MapListenerCallback<any>): MapListenerCallback<any> {\n    const mapId = this.id;\n    return (data: any) => {\n      if (data.mapId == mapId) {\n        callback(data);\n      }\n    };\n  }\n}\n"]}